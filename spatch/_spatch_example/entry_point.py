name = "backend1"
primary_types = ["builtins:float"]
secondary_types = ["builtins:int"]


# BEGIN AUTOGENERATED CODE: functions
functions = {
    "spatch._spatch_example.library:divide": {
        "function": "spatch._spatch_example.backend:divide",
        "should_run": "spatch._spatch_example.backend:divide._should_run",
        "uses_info": True,
        "additional_docs": "This implementation works well on floats.",
    }
}
# END AUTOGENERATED CODE: functions

# TODO: The documentation has to tell people not to create circles.
# and that includes with the types?!
# prioritize_over_backends = ["numpy"]

if __name__ == "__main__":
    # Run this file as a script to update this file
    from spatch.backend_utils import update_entrypoint
    from spatch._spatch_example.backend import backend1

    update_entrypoint(__file__, backend1, "spatch._spatch_example.backend")
